# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

# See the example.cfg file for a description of available parameters.

# For multiple build plate offsets
# https://klipper.discourse.group/t/saving-and-adjusting-per-build-surface-z-offsets/696
[save_variables]
filename: ~/klipper_config/saved_vars.cfg

[include mainsail.cfg]
[include air_filter_timer.cfg]
[include screen.cfg]

# Allow cancelling specific objects during a print.
# https://www.klipper3d.org/Config_Reference.html#exclude_object
[exclude_object]

[thermistor Corrected NTC100K B3950]
# See https://github.com/Klipper3d/klipper/issues/4054
temperature1: 20
resistance1: 125245
temperature2: 80
resistance2: 12540
temperature3: 220
resistance3: 396

[mcu]
##	Obtain mcu value by "ls -l /dev/serial/by-id/" 
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD6055356343443660443-if00


[stepper_y]
step_pin: PB13
dir_pin: PB12           # check https://docs.vorondesign.com/build/startup/#v0 if moving in the wrong direction
enable_pin: !PB14
rotation_distance: 40
microsteps: 16
endstop_pin: PC1
position_endstop: 119.5
position_max: 119.5
homing_speed: 40        # Increase after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: True
run_current: 0.75        # 1.68A motor, so max safe current is 0.7*1.68A = 1.12A
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 0


[stepper_x]
step_pin: PB10
dir_pin: PB2            # check https://docs.vorondesign.com/build/startup/#v0 if moving in the wrong direction
enable_pin: !PB11
rotation_distance: 40
microsteps: 16
endstop_pin: PC0 
position_endstop: 120
position_max: 120
homing_speed: 40        # Increase after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: True
run_current: 0.75        # 1.68A motor, so max safe current is 0.7*1.68A = 1.12A
hold_current: 0.25
sense_resistor: 0.110
stealthchop_threshold: 0


[stepper_z]
step_pin: PB0
dir_pin: !PC5           # Remove ! if moving opposite direction
enable_pin: !PB1
rotation_distance: 8    # For T8x8 integrated lead screw
microsteps: 4
endstop_pin: PC2
#position_endstop: -0.10
position_max: 120
position_min: -1.5
homing_speed: 10        # Max 100
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: True
run_current: 0.6       # For V0.1 spec NEMA17 LDO-42STH25-1004CL200E 1.0A, 0.7A max
hold_current: 0.35
sense_resistor: 0.110
stealthchop_threshold: 0


[extruder]
step_pin: PB3
dir_pin: !PB4            # Add ! if moving opposite direction
enable_pin: !PD2
full_steps_per_rotation: 200    # 1.8Â° motor LDO
rotation_distance: 22.50        # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10               # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: Corrected NTC100K B3950
sensor_pin: PA0
#control: pid            # Do PID calibration
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 300
min_extrude_temp: 170
max_extrude_only_distance: 780.0
max_extrude_cross_section: 0.8
# pressure_advance: 0.04              # ABS
pressure_advance: 0.066             # PLA
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 10.0

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: True
run_current: 0.3	# for LDO 36STH17-1004AHG, 0.7A max
hold_current: 0.2	# for LDO 36STH17-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 1


[heater_bed]
heater_pin: PC9
sensor_type: Corrected NTC100K B3950
sensor_pin: PC3
smooth_time: 3.0
min_temp: 0
max_temp: 125
#control: pid            # Do PID calibration
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122


[printer]
kinematics: corexy
max_velocity: 600
max_accel: 13000
max_z_velocity: 16
max_z_accel: 70
square_corner_velocity: 6.0


[heater_fan hotend_fan]
pin: PC7
# pin: PC15 # Unused pin, use to disable fan for clearing clogs
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0         # You can't PWM the delta fan unless using blue wire


[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
#depending on your fan, you may need to increase or reduce this value
#if your fan will not start
off_below: 0.13
cycle_time: 0.010


[idle_timeout]
timeout: 3600


[safe_z_home]
home_xy_position: 120,119.5
speed: 50.0
z_hop: 10


# Tool to help adjust bed leveling screws. One may define a
# [bed_screws] config section to enable a BED_SCREWS_ADJUST g-code
# command.
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 5, 5
mesh_max: 115, 115
probe_count: 4, 4


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    {% set svv = printer.save_variables.variables %}
    SET_FAN_SPEED FAN=enclosure_fan SPEED=0
    G28                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    ;; apply Z offset for configured bed surface
    RESPOND TYPE=command MSG="{ 'bed surface: %s, offset: %r' % (svv.selected_bed_surface, svv['bed_surface_offsets.' + svv.selected_bed_surface]) }"
    SET_GCODE_OFFSET MOVE=1 Z={ '%.3f' % (svv["bed_surface_offsets." + svv.selected_bed_surface] | float) }

   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear

[gcode_macro COOLDOWN]
gcode:
    {% if printer.toolhead.position.z < 110 %}
        G0 Z110 F3600
    {% endif %}
    TURN_OFF_HEATERS
    SET_FAN_SPEED FAN=enclosure_fan SPEED=1
    M106 S255   ; Part fan to max
    
[gcode_macro PRINT_END_COOLDOWN]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament

    COOLDOWN
    
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    G0 X60 Y{max_y} F3600
    M190 S50    ; Wait for bed to cool down (note: will heat to 50)
    M190        ; Turn off bed
    ; Turn off fans
    SET_FAN_SPEED FAN=enclosure_fan SPEED=0
    M107
	
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-50 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute
   
[gcode_macro PREHEAT]
gcode:
    M140 S118   ; Preheat bed
    M106 S255   ; Part fan at max
    {% if 'xyz' not in printer.toolhead.homed_axes %}
      G28         ; Home axes
    {% endif %}
    G0 X60 Y60 Z110 F5000   ; Move bed down and AB to middle
    M190 S118   ; Wait for bed to hit 118
    SET_FAN_SPEED FAN=enclosure_fan SPEED=1

[menu __main __temp __preheat_enclosure]
type:command
enable: {printer.idle_timeout.state != "Printing"}
name: Preheat enclosure
index: 3
gcode:
  PREHEAT


# Sensor Types
#   "EPCOS 100K B57560G104F"
#   "ATC Semitec 104GT-2"
#   "NTC 100K beta 3950" (Keenovo Heater Pad)
#   "Honeywell 100K 135-104LAG-J01"
#   "NTC 100K MGB18-104F39050L32"
#   "AD595"
#   "PT100 INA826"

[force_move]
enable_force_move: True

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None
#
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    60, 60, 20

# Input shaper calibrated 2022-12-26

#[temperature_sensor chamber]
#sensor_type: DS18B20
#serial_no: 28-0516a0468fff
#sensor_mcu: rpi
#gcode_id: C

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor SKR_Mini_E3]
sensor_type: temperature_mcu
min_temp: 10
max_temp: 100

[output_pin lights]
pin: PB9
pwm: True
cycle_time: 0.001
hardware_pwm: False
value: 0.5
shutdown_value: 0

[fan_generic enclosure_fan]
pin: PB8
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.01
hardware_pwm: False
kick_start_time: 0.1
off_below: 0.2

[fan_generic nevermore_fan]
pin: rpi:gpio22
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.01
hardware_pwm: False
kick_start_time: 0.1
off_below: 0.2

[display]
menu_timeout: 600

lcd_type: ssd1306
reset_pin: mcu:PB5
dc_pin: mcu:PA15
cs_pin: mcu:PA9 # TX1
spi_speed: 10000000
spi_bus: spi1

encoder_pins: mcu:PC13, mcu:PB15
click_pin: !mcu:PA10


[gcode_macro SPEEDTEST]
gcode:    
    {% set i = params.I|default(1)|int %}
    {% set speed = params.SPEED|default(300)|int %}
    {% set speed_mmm = speed|float * 60 %}

    SAVE_GCODE_STATE NAME=SPEEDTEST
    G28 X Y
    GET_POSITION
    M400
    #G4 P5                            ; Delay 5 seconds
    G90                              ; absolute positioning
    {% for iteration in range(i|int) %}
        G1 X10 Y10     F{speed_mmm}
        G1 X110 Y110  F{speed_mmm}
        G1 X10 Y10     F{speed_mmm}
        G1 X110 Y110 F{speed_mmm}

        G1 X10 Y110 F{speed_mmm}
        G1 X110 Y10 F{speed_mmm}
        G1 X10 Y110 F{speed_mmm}
        G1 X110 Y10 F{speed_mmm}
        G1 X10 Y110 F{speed_mmm}
        G1 X10 Y10 F{speed_mmm}
        G1 X110 Y10 F{speed_mmm}
        G1 X110 Y110 F{speed_mmm}
        G1 X10 Y110 F{speed_mmm}
        G1 X10 Y10 F{speed_mmm}
    {% endfor %}
    G1 X110 Y110 F{speed_mmm}
    G28 X Y
    GET_POSITION
    RESTORE_GCODE_STATE NAME=SPEEDTEST

[gcode_macro ZTEST]
gcode:
    {% set i = params.I|default(1)|int %}
    {% set speed = params.SPEED|default(12)|int %}
    {% set speed_mmm = speed|float * 60 %}

    SAVE_GCODE_STATE NAME=ZTEST
    G28
    GET_POSITION
    #G4 P5                            ; Delay 5 seconds
    M400 ; Wait for moves to finish
    G90                              ; absolute positioning
    {% for iteration in range(i|int) %}
        G1 Z115 F{speed_mmm}
        G1 Z114 F{speed_mmm}
        M400 ; Wait for moves to finish
        G4 P1 ; Wait 1 second
        G1 Z115 F{speed_mmm}
        M400 ; Wait for moves to finish
        G4 P1 ; Wait 1 second
        G1 Z5 F{speed_mmm}
    {% endfor %}
    G28
    GET_POSITION
    RESTORE_GCODE_STATE NAME=ZTEST
  
; From https://www.reddit.com/r/ender3v2/comments/n8177i/klipper_fluidd_is_awesome_even_without_abl_i_need/  
[pause_resume]
recover_velocity: 50.0

[gcode_macro M600]
gcode:
   SAVE_GCODE_STATE NAME=M600_state
   PAUSE
   RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro LIGHTS_OFF]
description: Turn off the lights
gcode:
  SET_PIN PIN=lights VALUE=0

[gcode_macro LIGHTS_ON]
description: Turn on the lights
gcode:
  SET_PIN PIN=lights VALUE=0.5

[delayed_gcode filter_off]
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0

[delayed_gcode fans_off]
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0
    SET_FAN_SPEED FAN=enclosure_fan SPEED=0
    M106 S0 # part fan off

[gcode_macro HEATSOAK_CHAMBER]
description: Heatsoak chamber to a specific temperature with a timeout
gcode:
    {% set MAXTIME = params.MAXTIME|default(30)|int %}
    M140 S118   ; Preheat bed

    {% for _ in range(1, 20 * MAXTIME) %}
        _WAIT_CHAMBER_TEMP
    {% endfor %}
    RESPOND MSG="Chamber temperature OK!"

[gcode_macro _WAIT_CHAMBER_TEMP]
# This macro is needed to allow klipper populate a new value in the printer[...].temperature variable
# as each variables are populated only once at the beginning of every macro call
gcode:
    {% set CURRENT_POWER = printer.heater_bed.power %}
    {% set CURRENT_FAN = printer['fan_generic enclosure_fan'].speed|float %}
    {% set NEW_FAN = CURRENT_FAN %}
    RESPOND MSG="Current power: {CURRENT_POWER}, Current fan: {CURRENT_FAN}"
    
    {% if CURRENT_POWER < 0.95 %}            
        {% if CURRENT_FAN < 1.0 %}
            {% set NEW_FAN = CURRENT_FAN + 0.02 %}
        {% endif %}
    {% else %}
        {% if CURRENT_FAN > 0.0 %}
            {% set NEW_FAN = CURRENT_FAN - 0.02 %}
        {% endif %}
    {% endif %}
    
    {% if NEW_FAN > 1.0 %}
        {% set NEW_FAN = 1.0 %}
     {% elif NEW_FAN < 0.0 %}
        {% set NEW_FAN = 0.0 %}
    {% endif %}
    
    {% if CURRENT_FAN != NEW_FAN %}
        SET_FAN_SPEED FAN=enclosure_fan SPEED={ NEW_FAN }
    {% endif %}
    G4 P3000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.079
#*# pid_ki = 1.549
#*# pid_kd = 78.658
#*#
#*# [stepper_z]
#*# position_endstop = 0.190
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.441
#*# pid_ki = 2.611
#*# pid_kd = 385.404
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 100.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 67.4
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.130000, 0.060000, -0.030000, -0.130000
#*# 	  0.120000, 0.060000, 0.040000, -0.020000
#*# 	  0.080000, 0.060000, 0.010000, -0.040000
#*# 	  0.000000, 0.020000, 0.040000, 0.020000
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 5.0
#*# max_x = 114.98
#*# min_y = 5.0
#*# max_y = 114.98
